<?xml version="1.0" encoding="UTF-8"?>


<configuration>


    <property name="PATTERN"
              value="%date{yyyy-MM-dd HH:mm:ss} | %highlight(%-5level) | %boldYellow(%thread) | %boldGreen(%logger) | [%file:%line] | %msg %n "/>

    <property name="BAS_FILE_PATH" value="${LOG_PATH}"/>
    <property name="INFO_FILE_PATH" value="${LOG_PATH}/info"/>
    <property name="WARN_FILE_PATH" value="${LOG_PATH}/warn"/>
    <property name="ERROR_FILE_PATH" value="${LOG_PATH}/error"/>
    <property name="maxHistory" value="60"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- info，表示文件随着时间的推移按时间生成日志文件 -->
    <appender name="INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
        //指定日志文件名为app.log
        <file>${BAS_FILE_PATH}/info.log</file>
        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 设置文件名称 -->
            <fileNamePattern>
                ${INFO_FILE_PATH}/info.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- 设置最大保存周期 -->
            <MaxHistory>${maxHistory}</MaxHistory>
            <!-- 日志文件rolling触发策略 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>100MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>

        <!-- 过滤器，过滤掉不是指定日志水平的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 设置日志级别 -->
            <level>INFO</level>
            <!-- 如果跟该日志水平相匹配，则接受 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 如果跟该日志水平不匹配，则过滤掉 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- warn，表示文件随着时间的推移按时间生成日志文件 -->
    <appender name="WARN" class="ch.qos.logback.core.rolling.RollingFileAppender">
        //指定日志文件名为app.log
        <file>${BAS_FILE_PATH}/warn.log</file>
        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 设置文件名称 -->
            <fileNamePattern>
                ${WARN_FILE_PATH}/warn.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- 设置最大保存周期 -->
            <MaxHistory>${maxHistory}</MaxHistory>
            <!-- 日志文件rolling触发策略 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>100MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>

        <!-- 过滤器，过滤掉不是指定日志水平的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 设置日志级别 -->
            <level>WARN</level>
            <!-- 如果跟该日志水平相匹配，则接受 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 如果跟该日志水平不匹配，则过滤掉 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- info，表示文件随着时间的推移按时间生成日志文件 -->
    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        //指定日志文件名为app.log
        <file>${BAS_FILE_PATH}/error.log</file>
        <!-- 滚动策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 设置文件名称 -->
            <fileNamePattern>
                ${ERROR_FILE_PATH}/error.%d{yyyy-MM-dd}.%i.log
            </fileNamePattern>
            <!-- 设置最大保存周期 -->
            <MaxHistory>${maxHistory}</MaxHistory>
            <!-- 日志文件rolling触发策略 -->
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <MaxFileSize>100MB</MaxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>

        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>

        <!-- 过滤器，过滤掉不是指定日志水平的日志 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 设置日志级别 -->
            <level>ERROR</level>
            <!-- 如果跟该日志水平相匹配，则接受 -->
            <onMatch>ACCEPT</onMatch>
            <!-- 如果跟该日志水平不匹配，则过滤掉 -->
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--<logger name="com.sjing" level="DEBUG" additivity="false">-->
    <!--<appender-ref ref="STDOUT" />-->
    <!--<appender-ref ref="FILE" />-->
    <!--</logger>-->
    <root level="info">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="INFO" />
        <appender-ref ref="ERROR" />
        <appender-ref ref="WARN" />
    </root>
    <!--<root level="debug">-->
        <!--<appender-ref ref="INFO" />-->
        <!--<appender-ref ref="ERROR" />-->
    <!--</root>-->
</configuration>